; ModuleID = 'moudle'
source_filename = "moudle"

@sort_arr = global [5 x i32] zeroinitializer

define i32 @combine(i32* %0, i32 %1, i32* %2, i32 %3) {
combineEntry:
  %arr1 = alloca i32*, align 8
  store i32* %0, i32** %arr1, align 8
  %arr1_length = alloca i32, align 4
  store i32 %1, i32* %arr1_length, align 4
  %arr2 = alloca i32*, align 8
  store i32* %2, i32** %arr2, align 8
  %arr2_length = alloca i32, align 4
  store i32 %3, i32* %arr2_length, align 4
  %loadArrPtr = load i32*, i32** %arr1, align 8
  %elementPoint = getelementptr i32, i32* %loadArrPtr, i32 1
  store i32 3, i32* %elementPoint, align 4
}

define i32 @main() {
mainEntry:
  %a = alloca [2 x i32], align 8
  %a1 = getelementptr inbounds [2 x i32], [2 x i32]* %a, i32 0, i32 0
  store i32 1, i32* %a1, align 4
  %a2 = getelementptr inbounds [2 x i32], [2 x i32]* %a, i32 0, i32 1
  store i32 5, i32* %a2, align 4
  %b = alloca [3 x i32], align 8
  %b3 = getelementptr inbounds [3 x i32], [3 x i32]* %b, i32 0, i32 0
  store i32 1, i32* %b3, align 4
  %b4 = getelementptr inbounds [3 x i32], [3 x i32]* %b, i32 0, i32 1
  store i32 4, i32* %b4, align 4
  %b5 = getelementptr inbounds [3 x i32], [3 x i32]* %b, i32 0, i32 2
  store i32 14, i32* %b5, align 4
  %arrayPtr = getelementptr inbounds [2 x i32], [2 x i32]* %a, i32 0, i32 0
  %arrayPtr6 = getelementptr inbounds [3 x i32], [3 x i32]* %b, i32 0, i32 0
  %callcombine = call i32 @combine(i32* %arrayPtr, i32 2, i32* %arrayPtr6, i32 3)
  ret i32 %callcombine
}
