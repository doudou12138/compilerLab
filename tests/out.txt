; ModuleID = 'moudle'
source_filename = "moudle"

define i32 @func2(i32* %0, i32 %1) {
func2Entry:
  %arr1 = alloca i32*, align 8
  store i32* %0, i32** %arr1, align 8
  %arr2 = alloca i32, align 4
  store i32 %1, i32* %arr2, align 4
  %loadArrPtr = load i32*, i32** %arr1, align 8
  %elementPoint = getelementptr i32, i32* %loadArrPtr, i32 0
  store i32 0, i32* %elementPoint, align 4
  %loadArrPtr1 = load i32*, i32** %arr1, align 8
  %elementPoint2 = getelementptr i32, i32* %loadArrPtr1, i32 0
  %callfunc2 = call i32 @func2(i32* %elementPoint2, i32* %arr2)
  ret i32 %callfunc2
  ret i32 0
}

define i32 @main(i32* %0, i32 %1) {
mainEntry:
  %arr1 = alloca i32*, align 8
  store i32* %0, i32** %arr1, align 8
  %arr2 = alloca i32, align 4
  store i32 %1, i32* %arr2, align 4
  %loadArrPtr = load i32*, i32** %arr1, align 8
  %elementPoint = getelementptr i32, i32* %loadArrPtr, i32 0
  store i32 1, i32* %elementPoint, align 4
  %b = alloca [3 x i32], align 4
  %b1 = getelementptr inbounds [3 x i32], [3 x i32]* %b, i32 0, i32 0
  store i32 1, i32* %b1, align 4
  %b2 = getelementptr inbounds [3 x i32], [3 x i32]* %b, i32 0, i32 1
  store i32 4, i32* %b2, align 4
  %b3 = getelementptr inbounds [3 x i32], [3 x i32]* %b, i32 0, i32 2
  store i32 14, i32* %b3, align 4
  %loadArrPtr4 = load i32*, i32** %arr1, align 8
  %elementPoint5 = getelementptr i32, i32* %loadArrPtr4, i32 0
  %callfunc2 = call i32 @func2(i32* %elementPoint5, i32* %arr2)
  ret i32 %callfunc2
  ret i32 0
}

define i32 @func() {
funcEntry:
  %a = alloca [2 x i32], align 4
  %a1 = getelementptr inbounds [2 x i32], [2 x i32]* %a, i32 0, i32 0
  store i32 1, i32* %a1, align 4
  %a2 = getelementptr inbounds [2 x i32], [2 x i32]* %a, i32 0, i32 1
  store i32 2, i32* %a2, align 4
  %arrayPtr = getelementptr inbounds [2 x i32], [2 x i32]* %a, i32 0, i32 0
  %elePoint = getelementptr inbounds [2 x i32], [2 x i32]* %a, i32 0, i32 0
  %a3 = load i32, i32* %elePoint, align 4
  %callmain = call i32 @main(i32* %arrayPtr, i32 %a3)
  ret i32 %callmain
  ret i32 0
}
