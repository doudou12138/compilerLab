; ModuleID = 'moudle'
source_filename = "moudle"

@sort_arr = global [5 x i32] 0

define i32 @combine(i32* %0, i32 %1, i32* %2, i32 %3) {
combineEntry:
  %arr1 = alloca i32*, align 8
  store i32* %0, i32** %arr1, align 8
  %arr1_length = alloca i32, align 4
  store i32 %1, i32* %arr1_length, align 4
  %arr2 = alloca i32*, align 8
  store i32* %2, i32** %arr2, align 8
  %arr2_length = alloca i32, align 4
  store i32 %3, i32* %arr2_length, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %j, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %k, align 4
  ret i32 1
}

define i32 @main() {
mainEntry:
  %a = alloca i32*, [2 x i32] [i32 1, i32 5], align 8
  %b = alloca i32*, [3 x i32] [i32 1, i32 4, i32 14], align 8
  %arrayPtr = getelementptr inbounds i32*, i32** %a, i32 0
  %arrayPtr1 = getelementptr inbounds i32*, i32** %b, i32 0
  %callcombine = call i32 @combine(i32** %arrayPtr, i32 2, i32** %arrayPtr1, i32 3)
  ret i32 %callcombine
}
