; ModuleID = 'moudle'
source_filename = "moudle"

@sort_arr = global [5 x i32] zeroinitializer

define i32 @combine(i32* %0, i32 %1, i32* %2, i32 %3) {
combineEntry:
  %arr1 = alloca i32*, align 8
  store i32* %0, i32** %arr1, align 8
  %arr1_length = alloca i32, align 4
  store i32 %1, i32* %arr1_length, align 4
  %arr2 = alloca i32*, align 8
  store i32* %2, i32** %arr2, align 8
  %arr2_length = alloca i32, align 4
  store i32 %3, i32* %arr2_length, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %j, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %k, align 4
  br label %condition

condition:                                        ; preds = %the_next, %combineEntry
  %i1 = load i32, i32* %i, align 4
  %arr1_length2 = load i32, i32* %arr1_length, align 4
  %lt = icmp slt i32 %i1, %arr1_length2
  %cond = zext i1 %lt to i32
  %cmp = icmp eq i32 %cond, 0
  br i1 %cmp, label %conl_false, label %conl_true
  %cond7 = icmp ne i32 0, %chek_32
  br i1 %cond7, label %while_body, label %next_block

while_body:                                       ; preds = %condition, %conl_true
  br label %condition8

next_block:                                       ; preds = %condition, %conl_true, %conl_false
  br label %condition30

conl_true:                                        ; preds = %condition
  %j3 = load i32, i32* %j, align 4
  %arr2_length4 = load i32, i32* %arr2_length, align 4
  %lt5 = icmp slt i32 %j3, %arr2_length4
  %cond6 = zext i1 %lt5 to i32
  %cmp_2 = icmp eq i32 %cond6, 0
  %chek_32 = zext i1 %cmp_2 to i32
  br i1 %cmp_2, label %while_body, label %next_block

conl_false:                                       ; preds = %condition
  br label %next_block

condition8:                                       ; preds = %while_body
  %i9 = load i32, i32* %i, align 4
  %elementPoint = getelementptr i32*, i32** %arr1
  %arr110 = load i32*, i32** %elementPoint, align 8
  %j11 = load i32, i32* %j, align 4
  %elementPoint12 = getelementptr i32*, i32** %arr2
  %arr213 = load i32*, i32** %elementPoint12, align 8
  %lt14 = icmp slt i32* %arr110, %arr213
  %cond15 = zext i1 %lt14 to i32
  %cond27 = icmp ne i32 0, %cond15
  br i1 %cond27, label %the_true, label %the_false

the_true:                                         ; preds = %condition8
  %k16 = load i32, i32* %k, align 4
  %i17 = load i32, i32* %i, align 4
  %elementPoint18 = getelementptr i32*, i32** %arr1
  %arr119 = load i32*, i32** %elementPoint18, align 8
  store i32* %arr119, [5 x i32]* @sort_arr, align 8
  %i20 = load i32, i32* %i, align 4
  %addtmp = add i32 %i20, 1
  store i32 %addtmp, i32* %i, align 4
  br label %the_next

the_false:                                        ; preds = %condition8
  %k21 = load i32, i32* %k, align 4
  %j22 = load i32, i32* %j, align 4
  %elementPoint23 = getelementptr i32*, i32** %arr2
  %arr224 = load i32*, i32** %elementPoint23, align 8
  store i32* %arr224, [5 x i32]* @sort_arr, align 8
  %j25 = load i32, i32* %j, align 4
  %addtmp26 = add i32 %j25, 1
  store i32 %addtmp26, i32* %j, align 4
  br label %the_next

the_next:                                         ; preds = %the_false, %the_true
  %k28 = load i32, i32* %k, align 4
  %addtmp29 = add i32 %k28, 1
  store i32 %addtmp29, i32* %k, align 4
  br label %condition

condition30:                                      ; preds = %next_block
  %i33 = load i32, i32* %i, align 4
  %arr1_length34 = load i32, i32* %arr1_length, align 4
  %eq = icmp eq i32 %i33, %arr1_length34
  %cond35 = zext i1 %eq to i32
  %cond69 = icmp ne i32 0, %cond35
  br i1 %cond69, label %the_true31, label %the_false32

the_true31:                                       ; preds = %condition30
  br label %condition37

the_false32:                                      ; preds = %condition30
  br label %condition53

the_next36:                                       ; preds = %next_block55, %next_block39
  %arr1_length70 = load i32, i32* %arr1_length, align 4
  %arr2_length71 = load i32, i32* %arr2_length, align 4
  %addtmp72 = add i32 %arr1_length70, %arr2_length71
  %subtmp = sub i32 %addtmp72, 1
  %sort_arr = load [5 x i32], [5 x i32]* @sort_arr, align 4
  ret [5 x i32] %sort_arr

condition37:                                      ; preds = %while_body38, %the_true31
  %j40 = load i32, i32* %j, align 4
  %arr2_length41 = load i32, i32* %arr2_length, align 4
  %lt42 = icmp slt i32 %j40, %arr2_length41
  %cond43 = zext i1 %lt42 to i32
  %cond44 = icmp ne i32 0, %cond43
  br i1 %cond44, label %while_body38, label %next_block39

while_body38:                                     ; preds = %condition37
  %k45 = load i32, i32* %k, align 4
  %j46 = load i32, i32* %j, align 4
  %elementPoint47 = getelementptr i32*, i32** %arr2
  %arr248 = load i32*, i32** %elementPoint47, align 8
  store i32* %arr248, [5 x i32]* @sort_arr, align 8
  %k49 = load i32, i32* %k, align 4
  %addtmp50 = add i32 %k49, 1
  store i32 %addtmp50, i32* %k, align 4
  %j51 = load i32, i32* %j, align 4
  %addtmp52 = add i32 %j51, 1
  store i32 %addtmp52, i32* %j, align 4
  br label %condition37

next_block39:                                     ; preds = %condition37
  br label %the_next36

condition53:                                      ; preds = %while_body54, %the_false32
  %i56 = load i32, i32* %i, align 4
  %arr1_length57 = load i32, i32* %arr1_length, align 4
  %lt58 = icmp slt i32 %i56, %arr1_length57
  %cond59 = zext i1 %lt58 to i32
  %cond60 = icmp ne i32 0, %cond59
  br i1 %cond60, label %while_body54, label %next_block55

while_body54:                                     ; preds = %condition53
  %k61 = load i32, i32* %k, align 4
  %i62 = load i32, i32* %i, align 4
  %elementPoint63 = getelementptr i32*, i32** %arr2
  %arr264 = load i32*, i32** %elementPoint63, align 8
  store i32* %arr264, [5 x i32]* @sort_arr, align 8
  %k65 = load i32, i32* %k, align 4
  %addtmp66 = add i32 %k65, 1
  store i32 %addtmp66, i32* %k, align 4
  %i67 = load i32, i32* %i, align 4
  %addtmp68 = add i32 %i67, 1
  store i32 %addtmp68, i32* %i, align 4
  br label %condition53

next_block55:                                     ; preds = %condition53
  br label %the_next36
}

define i32 @main() {
mainEntry:
  %a = alloca i32*, align 8
  %elementPoint = getelementptr i32*, i32** %a
  store i32 1, i32** %elementPoint, align 4
  %elementPoint1 = getelementptr i32*, i32** %a
  store i32 5, i32** %elementPoint1, align 4
  %b = alloca i32*, align 8
  %elementPoint2 = getelementptr i32*, i32** %b
  store i32 1, i32** %elementPoint2, align 4
  %elementPoint3 = getelementptr i32*, i32** %b
  store i32 4, i32** %elementPoint3, align 4
  %elementPoint4 = getelementptr i32*, i32** %b
  store i32 14, i32** %elementPoint4, align 4
  %a5 = load i32*, i32** %a, align 8
  %b6 = load i32*, i32** %b, align 8
  %callcombine = call i32 @combine(i32* %a5, i32 2, i32* %b6, i32 3)
  ret i32 %callcombine
}
